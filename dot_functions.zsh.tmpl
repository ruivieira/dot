GREEN="\033[1;32m"
YELLOW="\033[1;93m"
NOCOLOR="\033[0m"

function pyenvcreate () {
	local PROJ_DIR=$(basename $(pwd))
	echo creating pyenv: $fg[green]$PROJ_DIR $reset_color
	pyenv virtualenv 3.8.5 $PROJ_DIR
}

function pyenvactivate () {
	local PROJ_DIR=$(basename $(pwd))
	echo activating pyenv: $fg[green]$PROJ_DIR $reset_color
	pyenv activate $PROJ_DIR
}

function pyenvdelete () {
	local PROJ_DIR=$(basename $(pwd))
	echo deleting pyenv: $fg[green]$PROJ_DIR $reset_color
	pyenv virtualenv-delete $PROJ_DIR
}

{{- if eq .chezmoi.os "darwin" }}
function jvm_exists() {
	/usr/libexec/java_home -v$1 >& /dev/null
	if [ $? -eq 0 ]; then
		return 0
	else
		return 1
	fi
}
{{- end }}

function prepare_backup() {
	cd ~/Sync/
	echo -e "${GREEN}Sync code folders${NOCOLOR}"
	rsync -avh --exclude-from='.stignore' --delete  ~/Sync/code ~/Dropbox/code/backup/
	echo -e "${GREEN}Sync notes folders${NOCOLOR}"
	rsync -avh --exclude-from='.stignore' --delete  ~/notes ~/Dropbox/notes/
	echo -e "${GREEN}Sync wiki folder${NOCOLOR}"
	rsync -avh --exclude-from='.stignore' --delete  ~/Library/Containers/co.noteplan.NotePlan3/Data/Library/Application\ Support/co.noteplan.NotePlan3/ ~/Dropbox/wiki/
}

function docker_nuke() {
	# Delete all containers
	docker rm $(docker ps -a -q)
	# Delete all images
	docker rmi $(docker images -q)
}

function borg_backup_code() {
	local archive_name="$(date +%s)"
	borg create --progress --stats --compression zlib ~/Backup::code-${archive_name} ~/Dropbox/code/backup/code
}

function b2_upload_backup() {
	rclone -P sync ~/Backup b2:$B2_BACKUP_BUCKET
}

function restic_b2_backup() {
	local BUCKET={{ keepassxcAttribute "B2" "restic_bucket" }}
	echo -e "${GREEN}[restic]${NOCOLOR} Backing up code to ${YELLOW}B2:$BUCKET${NOCOLOR}"
	restic -r b2:$BUCKET:/ --verbose backup ~/Dropbox/code/backup/code --exclude-file="${HOME}/Sync/.stignore"
	echo -e "${GREEN}[restic]${NOCOLOR} Backing up docs to ${YELLOW}B2:$BUCKET${NOCOLOR}"
	restic -r b2:$BUCKET:/ --verbose backup ~/Sync/documents --exclude-file="${HOME}/Sync/.stignore"
	echo -e "${GREEN}[restic]${NOCOLOR} Backing up sites to ${YELLOW}B2:$BUCKET${NOCOLOR}"
	restic -r b2:$BUCKET:/ --verbose backup ~/Sync/sites --exclude-file="${HOME}/Sync/.stignore"
	echo -e "${GREEN}[restic]${NOCOLOR} Backing up wiki to ${YELLOW}B2:$BUCKET${NOCOLOR}"
	restic -r b2:$BUCKET:/ --verbose backup ~/Dropbox/wiki --exclude-file="${HOME}/Sync/.stignore"
	echo -e "${GREEN}[restic]${NOCOLOR} Backing up notes to ${YELLOW}B2:$BUCKET${NOCOLOR}"
	restic -r b2:$BUCKET:/ --verbose backup ~/notes --exclude-file="${HOME}/Sync/.stignore"
	echo -e "${GREEN}[restic]${NOCOLOR} Backing up joplin to ${YELLOW}B2:$BUCKET${NOCOLOR}"
	restic -r b2:$BUCKET:/ --verbose backup ~/.config/joplin-desktop \
	 	--exclude="cache" --exclude="log-autoupdater.txt" --exclude="log-clipper.txt" --exclude="log.txt" --exclude="tmp"
}

function restic_wasabi_backup() {
	echo -e "${GREEN}[restic]${NOCOLOR} Backing up code to ${YELLOW}Wasabi:{{ keepassxcAttribute "Wasabi" "code_bucket_name" }}${NOCOLOR}"
	 restic -r s3:https://{{ keepassxcAttribute "Wasabi" "endpoint" }}/{{ keepassxcAttribute "Wasabi" "code_bucket_name" }}/ --verbose backup ~/Dropbox/code/backup/code --exclude-file="${HOME}/Sync/.stignore"
}

function rsync_net_backup() {
	cd ~/Sync/
	local LOG_FILE="/Users/$USER/tmp/rsyncnet.log"
	touch $LOG_FILE
	echo BEGIN `date` >> ${LOG_FILE}
	echo -e "${GREEN}Sync code folders${NOCOLOR}"
	rsync -avH --exclude-from='.stignore' ~/Sync/code rsyncnet: >> ${LOG_FILE}
	echo -e "${GREEN}Sync journal folder${NOCOLOR}"
	rsync -avH --exclude-from='.stignore' ~/Library/Containers/co.noteplan.NotePlan3/Data/Library/Application\ Support/co.noteplan.NotePlan3/ rsyncnet:wiki >> ${LOG_FILE}
	echo END `date` >> ${LOG_FILE}
}

function rclone_b2_backup() {
	cd ~/Sync/
	echo -e "${GREEN}[rclone]${NOCOLOR} Backing up code to ${YELLOW}B2:{{ keepassxcAttribute "B2" "rclone_bucket_name" }}${NOCOLOR}"
	rclone sync --fast-list -v --exclude-from='.stignore' ~/Sync/code B2:{{ keepassxcAttribute "B2" "rclone_bucket_name" }}/code
}

function rclone_wasabi_backup() {
	cd ~/Sync/
	echo -e "${GREEN}[rclone]${NOCOLOR} Backing up code to ${YELLOW}Wasabi:{{ keepassxcAttribute "Wasabi" "code_bucket_name" }}${NOCOLOR}"
	rclone sync --fast-list -v --exclude-from='.stignore' ~/Sync/code wasabi:{{ keepassxcAttribute "Wasabi" "code_bucket_name" }}
}

function knitmd {
	Rscript -e "library(knitr); knit('$1')"
}

function syncthing_conflicts {
	find $1 -name "*.sync-conflict*"
}

function syncthing_conflicts_delete {
	find "$1" -name "*.sync-conflict*" -delete
}